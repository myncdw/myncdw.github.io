<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>字符串转Unicode（python）</title>
      <link href="/2023/06/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8CUnicode%E8%BD%AC%E6%8D%A2/"/>
      <url>/2023/06/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8CUnicode%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串转Unicode（python）"><a href="#字符串转Unicode（python）" class="headerlink" title="字符串转Unicode（python）"></a>字符串转Unicode（python）</h1><h2 id="为什么要做这个"><a href="#为什么要做这个" class="headerlink" title="为什么要做这个"></a>为什么要做这个</h2><p>事情的起因很简单，我买了一张专辑，叫做“繋(jì)宙歌”，然后这个“繋”字我在微软输入法里面怎么都找不到，最后我就想着能不能用Unicode的方式把它打出来</p><h2 id="在知道Unicode码的情况下怎么打出这个字"><a href="#在知道Unicode码的情况下怎么打出这个字" class="headerlink" title="在知道Unicode码的情况下怎么打出这个字"></a>在知道Unicode码的情况下怎么打出这个字</h2><p>非常简单，只需要输入“VUC”然后紧接着直接输入对应的Unicode码即可（十六进制）</p><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><h3 id="字符串转Unicode"><a href="#字符串转Unicode" class="headerlink" title="字符串转Unicode"></a>字符串转Unicode</h3><p>首先介绍一个基本的函数：<code>ord()</code>：返回一个字符的ASCII码数值</p><p>举个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">word = <span class="string">&#x27;东&#x27;</span></span><br><span class="line">result = <span class="built_in">ord</span>(word)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>这样它就会输出“东”这个字的ASCII编码值，是19996</p><p>但是前面说了，VUC只能用十六进制，所以我们还要转为16进制</p><p>这里再介绍一个基本的函数：<code>hex()</code></p><p>它的作用就很简单了，就是将整数转换为十六进制字符串</p><p>所以完整的代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">word = <span class="string">&#x27;东&#x27;</span></span><br><span class="line">result = <span class="built_in">hex</span>(<span class="built_in">ord</span>(word))</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>这样就会输出对应的十六进制的Unicode码，为0x4e1c</p><h3 id="Unicode转字符串"><a href="#Unicode转字符串" class="headerlink" title="Unicode转字符串"></a>Unicode转字符串</h3><p>首先要了解一个基本的函数：<code>chr()</code>：将整数转换为对应的ASCII字符</p><p>举个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unicode = <span class="number">19996</span></span><br><span class="line">word = <span class="built_in">chr</span>(unicode)</span><br><span class="line"><span class="built_in">print</span>(word)</span><br></pre></td></tr></table></figure><p>这样他就会输出“东”</p><p>但是如果你只知道这个字的十六进制的Unicode编码的话，这个方法就不太行了</p><p>所以我们可以使用这个函数：<code>eval()</code>：执行一个字符串表达式，并返回表达式的值</p><p>它可以执行字符串里面的代码，如:</p><p><code>eval(&quot;print(&#39;1&#39;)&quot;)</code>输出的就是1</p><p>或者单纯的把参数中最外层引号去掉</p><p>这里我们要的是十六进制的数字，所以直接使用<code>int()</code>是不行的</p><p>我们要稍微做一个修改</p><p><code>int(x, 16)</code></p><p>x就是你的数字，16就是对应的进制，比如：<code>int(&#39;4e1c&#39;, 16)</code></p><p>所以完整的代码就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">unicode = <span class="built_in">int</span>(<span class="string">&#x27;4e1c&#x27;</span>, <span class="number">16</span>)</span><br><span class="line">Unicode = <span class="built_in">hex</span>(Unicode)</span><br><span class="line">Unicode = <span class="built_in">eval</span>(Unicode)</span><br><span class="line">word = <span class="built_in">chr</span>(Unicode)</span><br><span class="line"><span class="built_in">print</span>(word)</span><br></pre></td></tr></table></figure><p>这样，它就会输出东这个字了</p><p>那么问题来了，明明我已经存储了对应的十六进制码了，为什么我还要转换这么多次呢？</p><p>1.虽然我们存储的是十六进制的数据，但是他还是属于int类型，而eval传入只能是str类型</p><p>2.如果使用str类型，就会报错invalid decimal literal，在这里是因为python默认识别的是10进制，然而十进制中并没有字母，如果恰好你的Unicode中没有字母，那么它的值也发生的变化</p><p>3.用<code>hex()</code>可以完美的避开上面的问题</p><h3 id="自己的小作品"><a href="#自己的小作品" class="headerlink" title="自己的小作品"></a>自己的小作品</h3><p>这个是我自己做的小作品</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;历史.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="built_in">print</span>(f.read())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">word_2_unicode</span>():</span><br><span class="line">search_mode = <span class="built_in">str</span>(<span class="built_in">input</span>(<span class="string">&#x27;文字转Unicode回复 1 ，Unicode转文字回复 2 ，Unicode16进制转文字回复 3 ，退出回复 4 &gt;&gt;&gt;&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> search_mode == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">word = <span class="built_in">str</span>(<span class="built_in">input</span>(<span class="string">&#x27;输入转换的文字&gt;&gt;&gt;&#x27;</span>))</span><br><span class="line">Unicode = <span class="built_in">str</span>(<span class="built_in">ord</span>(word))</span><br><span class="line">print_word = <span class="built_in">hex</span>(<span class="built_in">int</span>(Unicode))</span><br><span class="line"><span class="built_in">print</span>(Unicode, print_word)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> search_mode == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">Unicode = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;输入转换的Unicode码&gt;&gt;&gt;&#x27;</span>))</span><br><span class="line">word = <span class="built_in">chr</span>(Unicode)</span><br><span class="line">print_word = <span class="built_in">hex</span>(Unicode)</span><br><span class="line">Unicode = <span class="built_in">str</span>(Unicode)</span><br><span class="line">word = <span class="built_in">str</span>(word)</span><br><span class="line"><span class="built_in">print</span>(word)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> search_mode == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">Unicode = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;输入转换的Unicode码&gt;&gt;&gt;&#x27;</span>), <span class="number">16</span>)</span><br><span class="line">Unicode = <span class="built_in">hex</span>(Unicode)</span><br><span class="line">Unicode = <span class="built_in">eval</span>(Unicode) </span><br><span class="line">word = <span class="built_in">chr</span>(Unicode)</span><br><span class="line">print_word = <span class="built_in">hex</span>(Unicode)</span><br><span class="line">Unicode = <span class="built_in">str</span>(Unicode)</span><br><span class="line">word = <span class="built_in">str</span>(word)</span><br><span class="line"><span class="built_in">print</span>(word)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> search_mode == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">os.exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">input</span>(<span class="string">&#x27;输入错误!&#x27;</span>)</span><br><span class="line">word_2_unicode()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;历史.json&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> new:</span><br><span class="line">content = word + <span class="string">&#x27;对应的是：&#x27;</span> + Unicode + <span class="string">&#x27; VUC：&#x27;</span> + print_word + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">new.write(content)</span><br><span class="line">new.close()</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&quot;pause&quot;</span>)</span><br><span class="line"></span><br><span class="line">word_2_unicode()</span><br></pre></td></tr></table></figure><p>这个作品用到的东西和上面的差不多，只是加了一个历史记录的功能而已，它还可以继续改进</p><p>希望它可以帮到你</p>]]></content>
      
      
      <categories>
          
          <category> 奇怪的工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 奇怪的工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学教学工具</title>
      <link href="/2023/04/21/%E6%95%B0%E5%AD%A6%E6%95%99%E5%AD%A6%E5%B7%A5%E5%85%B7/"/>
      <url>/2023/04/21/%E6%95%B0%E5%AD%A6%E6%95%99%E5%AD%A6%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="数学教学工具"><a href="#数学教学工具" class="headerlink" title="数学教学工具"></a>数学教学工具</h1><h2 id="使用的工具"><a href="#使用的工具" class="headerlink" title="使用的工具"></a>使用的工具</h2><p>我主要使用的是GeoGebra，这是<a href="https://www.geogebra.org/">它的官网</a>，其他类似的还有<a href="https://www.desmos.com/calculator?lang=zh-CN">Desmos</a>，这2个都是很不错的数学工具（但是在部分情况下desmos打不开）</p><h3 id="GeoGebra下载方法"><a href="#GeoGebra下载方法" class="headerlink" title="GeoGebra下载方法"></a>GeoGebra下载方法</h3><p>点击<a href="https://www.geogebra.org/download">应用下载 – GeoGebra</a>会跳转到下载链接，建议下载“GeoGebra 经典 6”，这一版集合了几乎所有其他的版本，或者你可以点击每个选项右侧的“打开”进行网页使用</p><p>如果你是安卓用户并且不知道如何科学的使用Google play，这里是<a href="http://myncdw.top/%E6%95%B0%E5%AD%A6/%E5%AE%89%E5%8D%93%E4%B8%8B%E8%BD%BD/GeoGebra.apk">下载链接</a></p><h2 id="已经做好的数学文件"><a href="#已经做好的数学文件" class="headerlink" title="已经做好的数学文件"></a>已经做好的数学文件</h2><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p><a href="http://myncdw.top/%E6%95%B0%E5%AD%A6/%E5%87%BD%E6%95%B0/y%3Dax%5E3%2Bbx%5E2%2Bcx.ggb">y&#x3D;ax³+bx²+cx</a></p><p><a href="http://myncdw.top/%E6%95%B0%E5%AD%A6/%E5%87%BD%E6%95%B0/%E5%8D%97%E4%BA%AC%E5%B8%82%E8%81%94%E5%90%88%E4%BD%93%E4%B8%80%E6%A8%A1%E6%95%B0%E5%AD%A6%E7%AC%AC6%E9%A2%98.ggb">南京市联合体一模数学第6题</a></p><h2 id="立体"><a href="#立体" class="headerlink" title="立体"></a>立体</h2><p><a href="http://myncdw.top/%E6%95%B0%E5%AD%A6/%E7%AB%8B%E4%BD%93/%E8%BE%B9%E9%95%BF%E4%B8%BAa%E7%9A%84%E6%AD%A3%E5%9B%9B%E8%BE%B9%E5%BD%A2.ggb">边长为a的正四边形</a></p><h2 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h2><p><a href="http://myncdw.top/%E6%95%B0%E5%AD%A6/%E5%9B%BE%E5%BD%A2/3%E5%9C%86%E7%9B%B8%E5%88%87%E5%81%9A%E6%B3%95.ggb">3圆相切做法</a></p><p><a href="https://myncdw.top/%E6%95%B0%E5%AD%A6/%E5%9B%BE%E5%BD%A2/3%EF%BC%9A4%E7%9A%84%E7%9F%A9%E5%BD%A2.ggb">3：4的矩形</a></p><p><a href="https://myncdw.top/%E6%95%B0%E5%AD%A6/%E5%9B%BE%E5%BD%A2/%E8%A7%92%E5%A4%96%E5%81%9A%E7%9B%B8%E7%AD%89%E7%9A%8490%E5%BA%A6.ggb">角外做相等的90度</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>验证器</title>
      <link href="/2023/04/17/%E9%AA%8C%E8%AF%81%E5%99%A8/"/>
      <url>/2023/04/17/%E9%AA%8C%E8%AF%81%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="验证器"><a href="#验证器" class="headerlink" title="验证器"></a>验证器</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>之前身边的人收到了一些类似于辅助验证一样的诈骗信息，为此，我做了一个验证是否是我自己发出信息的小工具（就是不太实用）</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="http://myncdw.top/%E9%AA%8C%E8%AF%81%E5%99%A8/%E9%AA%8C%E8%AF%81%E7%B3%BB%E7%BB%9F1.1.4.zip">验证器下载</a></p><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>1.打开此程序</p><p>2.输入收到的6位验证信息，它通常在信息的末尾</p><p>3.程序会跳转的对应的验证区域，请选择与开头最相似的那个然后复制到程序中</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站成功</title>
      <link href="/2023/04/17/%E5%BB%BA%E7%AB%99%E6%88%90%E5%8A%9F/"/>
      <url>/2023/04/17/%E5%BB%BA%E7%AB%99%E6%88%90%E5%8A%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="建站成功"><a href="#建站成功" class="headerlink" title="建站成功"></a>建站成功</h1><h2 id="挫折"><a href="#挫折" class="headerlink" title="挫折"></a>挫折</h2><p>1.刚开始没找到GitHub page这个选项，以为是网络问题，然后花了30分钟的时间发现是我仓库名少打了一个点；</p><p>2.设置next主题的时候在挑选主题时老是选2个，然后报错的时候还不知道原因，在网上找了半天没结果，最后才发现这个问题；</p><p>3.买域名的时候因为没有经验，顺手买了一个阿里云的icp备案服务码，结果问了才知道不要买；</p><p>4.最令人崩溃的是快要收尾的时候不知道犯了什么错，网页打开一片白，只好从头再来；</p><p>5.从头再来之后部署来必力，在填uid的地方多打了一个空格，然后花了2个小时来找问题。</p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>成就感十足，感觉自己完成了一件大事（对于一个在上学的初三学生来说，用这么点时间来做一个个人博客太难了）。</p><p>其实建个人博客这个想法很久之前我就有了，只不过当时没有这个能力（懒），所以一直拖到现在。之前在<a href="http://www.zhuzi.me/">竹子建站</a>上面做过一个小网站，但是感觉自己没干啥事，所以做完这个网站时候我并没有满足。</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢知乎大佬<a href="https://www.zhihu.com/people/mai-nv-hai-de-xiao-huo-chai-35-19">枫叶</a>的教程，写的特别详细<a href="https://zhuanlan.zhihu.com/p/102592286">这是教程</a>。</p><p>还有支持我的家人们</p><p>最后是那些帮忙测试的同学</p><p>谢谢大家的支持！</p>]]></content>
      
      
      <categories>
          
          <category> 开心的事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
